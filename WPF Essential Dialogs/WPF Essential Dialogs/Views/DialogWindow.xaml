<Window x:Class="EssentialDialogs.Views.DialogWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EssentialDialogs.Views"
        mc:Ignorable="d"
        Title="{Binding Path=Title}" Width="600" SizeToContent="Height"
        Loaded="Window_Loaded" ResizeMode="NoResize"
        
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        
        KeyUp="Window_KeyUp">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />

                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />-->

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Amber.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <StackPanel>
        <Grid Visibility="{Binding Path=Card_Title_Visibility}">
            <materialDesign:Card Padding="32" Margin="16 16 16 8" Grid.ColumnSpan="2">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="{Binding Path=Icon}" Margin="0 0 8 0" Height="32" Width="32" VerticalAlignment="Center" Visibility="{Binding Path=IconVisibility, FallbackValue=Collapsed}"/>
                    <TextBlock VerticalAlignment="Center" Style="{DynamicResource MaterialDesignHeadline6TextBlock}" Text="{Binding Path=Title, FallbackValue='Input Dialog Title'}"/>
                </StackPanel>
            </materialDesign:Card>
            <Image Grid.Row="0" HorizontalAlignment="Right" Margin="32 0" Height="64" Source="{Binding LogoSource}"/>
        </Grid>
        <materialDesign:Card Padding="32 16" Margin="16 8 16 16" Grid.ColumnSpan="2">
            <TextBlock Style="{DynamicResource MaterialDesignBody2TextBlock}" TextWrapping="Wrap" Text="{Binding Path=Message, FallbackValue='Some random question that may over lap the height of the card so we need to put enough text to check if that is the case, this is a prime example of what a load of redundant text looks like when needing to fill space.'}"/>
        </materialDesign:Card>
        <ListView materialDesign:HintAssist.Hint="Search" Style="{StaticResource MaterialDesignListView}" Margin="16 0 16 8" Visibility="{Binding Path=ComboBox_Selection_Visibility, FallbackValue=Visible}" SelectionMode="{Binding Path=SelectionMode, FallbackValue=Single}"
                  ItemsSource="{Binding Path=SelectionList}" DisplayMemberPath="{Binding Path=SelectionDisplayMember}" SelectedItem="{Binding Path=SelectionResult, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxHeight="150" x:Name="ComboBox_Select">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Height" Value="22" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <DatePicker materialDesign:HintAssist.Hint="Select A Date" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" Margin="16 0 16 8" Visibility="{Binding Path=DatePicker_Selection_Visibility, FallbackValue=Collapsed}"
                    DisplayDateStart="{Binding Path=DateFrom}" DisplayDateEnd="{Binding Path=DateTo}" SelectedDate="{Binding Path=SelectedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <materialDesign:TimePicker materialDesign:HintAssist.Hint="Select A Time" Style="{StaticResource MaterialDesignFloatingHintTimePicker}" Margin="16 0 16 8" Visibility="{Binding Path=TimePicker_Selection_Visibility, FallbackValue=Collapsed}"
                    Is24Hours="True" SelectedTime="{Binding Path=SelectedTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox Style="{StaticResource MaterialDesignTextBox}" Margin="16 0 16 8" Visibility="{Binding Path=TextBox_Visibility, FallbackValue=Collapsed}"
                 materialDesign:HintAssist.Hint="{Binding Path=InputTextHint}" Text="{Binding Path=InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Width="140" Margin="4 0" Command="{Binding CommandYes}" Visibility="{Binding Path=Button_Yes_Visibility}" Content="{Binding Path=ButtonYesContent, FallbackValue=Yes, UpdateSourceTrigger=PropertyChanged}"/>
            <Button Width="140" Margin="4 0" Command="{Binding CommandOk}" Visibility="{Binding Path=Button_Ok_Visibility}" Content="{Binding Path=ButtonOkContent, FallbackValue=Ok, UpdateSourceTrigger=PropertyChanged}"/>
            <Button Width="140" Margin="4 0" Command="{Binding CommandSelect}" Visibility="{Binding Path=Button_Select_Visibility}" Content="{Binding Path=ButtonSelectContent, FallbackValue=Select, UpdateSourceTrigger=PropertyChanged}"/>
            <Button Width="140" Margin="4 0" Command="{Binding CommandNo}" Visibility="{Binding Path=Button_No_Visibility}" Content="{Binding Path=ButtonNoContent, FallbackValue=No, UpdateSourceTrigger=PropertyChanged}"/>
            <Button Width="140" Margin="4 0" Command="{Binding CommandCancel}" Visibility="{Binding Path=Button_Cancel_Visibility}" Content="{Binding Path=ButtonCancelContent, FallbackValue=Cancel, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
    </StackPanel>
</Window>
